<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool-3.1.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-lazy-init="true">
  	<!-- 启用注解支持，让DispatcherServlet使用AnnotationMethodHandlerAdapter对Controller方法进行调用和处理 --> 
	
	<!--配置视图解析器-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 
		<property name="prefix" value="/WEB-INF/page/"/>
		 -->
		<property name="prefix" value="/"/>  
    	<property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.InternalResourceView</value>
		</property>
	</bean>  	
	<!-- 配置文件上传的组件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		  <!-- 以字节为单位的最大上传文件的大小 -->
		  <property name="maxUploadSize" value="1000000" />
	 </bean>
	 
	<mvc:annotation-driven/>
	<context:annotation-config/>
	
	<!--配置静态文件  -->      
 	<mvc:default-servlet-handler/>
  	
	<!-- 
	处理器-适配器，AnnotationMethodHandlerAdapter负责调用我们的Controller方法。
	如果发现方法上标有@ResponseBody，则遍历messageConverters，找到适合的一个Converter，
	由此Converter将Controller方法返回值直接输出到response响应体。
	-->
	<bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
	 	<property name="messageConverters" ref="messageConverters"/>
	</bean>
  
	<!-- 异常处理，将AnnotationMethodHandlerAdapter同样规则来输出结果-->
	<bean id="handlerExceptionResolver" class="com.elend.p2p.annotation.HandlerMethodExceptionResolver">
		<!-- 没有被#ResponseBody标记的Controller方法将返回错误页面 -->
		<property name="defaultErrorView" value="error.jsp"/>
		<!-- 标有#ResponseBody注解的Controller方法，将使用此输出JSON-->
		<property name="messageConverters" ref="messageConverters"/>
	</bean>
	<!-- 
    <aop:aspectj-autoproxy proxy-target-class="true"/>
     -->
    <util:list id="messageConverters"> 
   	 	<!-- Controller返回 对象自动转换成json -->
		<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>
					<value>application/json</value>  
	                <value>application/javascript</value>  
	                <value>text/json</value>  
	                <value>text/javascript</value>
				</list>
			</property>
		</bean>
    </util:list>
    
    <context:component-scan base-package="com.elend.spider.api.controller">
    	<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" />  
    </context:component-scan>
    
    <mvc:interceptors>
    	<mvc:interceptor>
        	<mvc:mapping path="/**" />
             <ref bean="ipAccessInterceptor"/>
        </mvc:interceptor> 
    </mvc:interceptors>
</beans>
